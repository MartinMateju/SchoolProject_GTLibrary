{"version":3,"sources":["./ClientApp/$_lazy_route_resource lazy","./ClientApp/app/app.component.html","./ClientApp/app/app.component.ts","./ClientApp/app/app.module.ts","./ClientApp/app/book-list/book-list.component.html","./ClientApp/app/book-list/book-list.component.ts","./ClientApp/app/book/book.component.html","./ClientApp/app/book/book.component.ts","./ClientApp/app/services/data.service.ts","./ClientApp/environments/environment.ts","./ClientApp/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kF;;;;;;;ACVA,uCAAuC,OAAO,qI;;;;;;;;;;;;;;;;ACA9C,8EAA0C;AAQ1C;IALA;QAME,UAAK,GAAG,gBAAgB,CAAC;IAC3B,CAAC;IAFY,YAAY;QALxB,gBAAS,CAAC;YACP,QAAQ,EAAE,aAAa;;YAEvB,MAAM,EAAE,EAAE;SACb,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFY,oCAAY;;;;;;;;;;;;;;;;;ACRzB,kHAA0D;AAC1D,8EAAyC;AACzC,gFAAwD;AAExD,8EAA+C;AAC/C,qFAAsD;AACtD,qFAAsD;AACtD,oGAAoE;AAkBpE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAfrB,eAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,4BAAY;gBACZ,8BAAa;gBACb,uCAAiB;aAClB;YACD,OAAO,EAAE;gBACL,gCAAa;gBACb,uBAAgB;aACnB;YACD,SAAS,EAAE;gBACP,0BAAW;aACd;YACD,SAAS,EAAE,CAAC,4BAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAb,8BAAS;;;;;;;;ACzBtB,uIAAuI,SAAS,IAAI,eAAe,6B;;;;;;;;;;;;;;;;;;;ACAnK,8EAAkD;AAClD,qFAAuD;AASvD;IAEI,2BAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QAI9B,UAAK,GAAG,EAAE,CAAC;QAHd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IAC5B,CAAC;IAID,oCAAQ,GAAR;QAAA,iBAOC;QANG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;aAChB,SAAS,CAAC,iBAAO;YACd,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACV,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC;YACjC,CAAC;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAfQ,iBAAiB;QAN7B,gBAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;YAEzB,MAAM,EAAE,EAAE;SACX,CAAC;yCAI4B,0BAAW;OAF5B,iBAAiB,CAgB7B;IAAD,wBAAC;CAAA;AAhBY,8CAAiB;;;;;;;;ACV9B,uL;;;;;;;;;;;;;;;;;;;ACAA,8EAAkD;AAClD,qFAAuD;AAQvD;IAEE,uBAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;IAAI,CAAC;IAF/B,aAAa;QANzB,gBAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;YAEpB,MAAM,EAAE,EAAE;SACX,CAAC;yCAI0B,0BAAW;OAF1B,aAAa,CAMzB;IAAD,oBAAC;CAAA;AANY,sCAAa;;;;;;;;;;;;;;;;;;;;ACT1B,gFAAkD;AAClD,8EAA2C;AAC3C,qEAA+B;AAG/B;IAEI,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAK7B,UAAK,GAAG,EAAE,CAAC;IAFlB,CAAC;IAID,+BAAS,GAAT;QAAA,iBAQC;QAPG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC;aAC5B,GAAG,CAAC,UAAC,IAAW;YACb,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;IAGX,CAAC;IAjBQ,WAAW;QADvB,iBAAU,EAAE;yCAGiB,iBAAU;OAF3B,WAAW,CAkBvB;IAAD,kBAAC;CAAA;AAlBY,kCAAW;;;;;;;;;;ACLxB,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;;AAEnE,mBAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;ACPF,8EAA+C;AAC/C,0IAA2E;AAE3E,wEAA6C;AAC7C,mFAAyD;AAEzD,EAAE,CAAC,CAAC,yBAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,qBAAc,EAAE,CAAC;AACnB,CAAC;AAED,iDAAsB,EAAE,CAAC,eAAe,CAAC,sBAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./ClientApp/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/$$_lazy_route_resource lazy\n// module id = ./ClientApp/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<h1>Hello from Mod {{title}}</h1>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-9\\\">\\r\\n        <app-book-list> </app-book-list>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/app.component.html\n// module id = ./ClientApp/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'app-library',\n    templateUrl: \"./app.component.html\",\n    styles: []\n})\nexport class AppComponent {\n  title = 'Online Library';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { DataService } from './services/data.service';\nimport { BookComponent } from './book/book.component';\nimport { BookListComponent } from './book-list/book-list.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BookComponent,\n    BookListComponent\n  ],\n  imports: [\n      BrowserModule,\n      HttpClientModule\n  ],\n  providers: [\n      DataService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/app.module.ts","module.exports = \"<h1> Hello from the book list! </h1>\\r\\n<div class=\\\"row\\\">\\r\\n    <ul>\\r\\n        <li *ngFor = \\\"let b of books\\\">{{b.title}}, {{b.description}}</li>\\r\\n    </ul>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/book-list/book-list.component.html\n// module id = ./ClientApp/app/book-list/book-list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { DataService } from \"../services/data.service\";\n\n\n@Component({\n  selector: 'app-book-list',\n  templateUrl: \"book-list.component.html\",\n  styles: []\n})\n\nexport class BookListComponent implements OnInit {\n    \n    constructor(private data: DataService) {\n        this.books = data.books;\n    }\n\n    public books = [];\n\n    ngOnInit(): void {\r\n        this.data.loadBooks()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.books = this.data.books;\r\n                }\r\n            });\r\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/book-list/book-list.component.ts","module.exports = \"<!DOCTYPE html>\\r\\n<html>\\r\\n<head>\\r\\n    <meta charset=\\\"utf-8\\\" />\\r\\n    <title></title>\\r\\n</head>\\r\\n<body>\\r\\n    <h1> book works!</h1>\\r\\n</body>\\r\\n</html>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/book/book.component.html\n// module id = ./ClientApp/app/book/book.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { DataService } from \"../services/data.service\";\n\n@Component({\n  selector: 'app-book',\n  templateUrl: \"book.component.html\",\n  styles: []\n})\n\nexport class BookComponent {\n\n  constructor(private data: DataService) { }\n\n \n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/book/book.component.ts","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    constructor(private http: HttpClient)\r\n    {\r\n    \r\n    }\r\n\r\n    public books = [];\r\n\r\n    loadBooks() {\r\n        return this.http.get(\"api/books\")\r\n            .map((data: any[]) => {\r\n                this.books = data;\r\n                return true; \r\n            });\r\n\r\n\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/services/data.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/main.ts"],"sourceRoot":"webpack:///"}